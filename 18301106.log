6.30
1.下载安装了git，学习git的使用
2.安装了spark、jdk、hadoop、python，配置了系统变量
   spark2.4.6与python3.8.3版本不符，选择安装了python3.6.8
3.安装了pycharm

7.1
1.通过pip安装了python包
2.在vmware上安装了ubuntu虚拟机
   需要设置电脑bios中支持虚拟化
3.配置虚拟机
   重新安装了vmware15pro，能够进行网络配置

7.2
1.配置虚拟机网络，安装xshell，连接本地虚拟机，修改虚拟主机名
   学习了vim命令，掌握了基本命令
2.小组讨论确立下一步小组分工，学习了时间序列、ARIMA模型
   在pycharm中导入了python包，正在尝试处理数据

7.3
1.在spark中进行数据清洗
2.通过pip命令安装flask包，导入pycharm
3.学习flask，启动了一个flask程序，正在学习配置flask路由

7.4
1.配置flask路由，确立了新的分工
2.安装myeclipse，完成配置及tomcat配置
3.学习javaspring，正在尝试完成用户登录的前端部分

7.5
1.新建了一个java web项目
2.完成spring mvc项目配置
   在网上逐一下载springmvc依赖的jar包，并配置了路径导入包  
   修改web.xml文件，添加springmvc-servlet.xml配置文件
3.正在学习写用户登录，添加controller类，写了welcome界面的jsp文件
4.为了方便小组对接，用python+flask搭建也是一个选择

7.6
1.小组明确前进方向，全部采用flask框架，开始转向html写前端网页
2.完成登录、注册界面的设计
   解决了注册界面验证码的添加
   学会通过css调整模块的样式，添加背景和页面布局，调用fontawesome库
   html之间的跳转
   
7.7
1.学习了通过js隐藏或显示密码，用户可以点击fontawesome库中的图标来实现
2.实现了通过点击按钮使三个网页自由切换 
   href/onclick
   需要添加flask装饰器
3.用户注册时需要输入两遍密码

7.8
1.实现了prediction网页
   新增echarts图表，目前暂为柱状图，从flask接受数组数据
   增加日期选择框，默认浏览器自带
2.学习flask
   ajax传输到flask、form

7.9
1.改进预测界面
   修改echarts柱状图，改为有两个y值
   完成flask传递数组，读入echarts data
2.完成管理员界面
   学习增加table表格
   通过循环读入数据库内用户数据

7.10
1.改进验证码，
   想办法将html中的文字传入flask，后台接受验证码内的内容，与传入的用户输入数据进行比对
2.优化界面

7.11
1.校对并增改了北京区县天气数据
2.全面更新了预测页面与管理员界面，界面更加美观了
   增加了管理员界面的角色管理栏，可以设置用户权限了
   更改了button样式，新增了背景图片（解决了路径问题）
   新增地区选择框，现在可以预测北京各地区的温度了，并且修改柱状图y值使图更加合理
3.网页部分对接完成，项目完工
   